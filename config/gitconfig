[user]
  name = <%= user_id["name"] %>
  email = <%= user_id["email"] %>

[diff "ruby"]
  funcname = ^ *\\(\\(class\\|module\\|def\\) .*\\)

[core]
  excludesfile = <%= ENV["HOME"] %>/.gitignore
  pager = less -FRSX
  whitespace=trailing-space,tab-in-indent,cr-at-eol,space-before-tab
  autocrlf = input
  safecrlf = true

[merge]
  tool = gvimdiff
  # Include summaries of merged commits in newly created merge commit messages
  log = true

[mergetool "gvimdiff"]
  cmd = gvim -d --remote-wait-silent "${LOCAL}" "${MERGED}" "${REMOTE}"
  trustExitCode = true

[mergetool "vimdiff"]
  cmd = vim -d "${LOCAL}" "${MERGED}" "${REMOTE}"
  trustExitCode = true

[format]
  pretty = %C(yellow)%h%Creset %C(red)%ad%Creset | %s%d %C(green)[%aN]%Creset

[log]
  date = short

[alias]
  # Simple functionality extension
  branches      = branch -a
  cat           = -p cat-file -p
  changes       = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
  changelog     = log --pretty=format:\" * %s\"
  co            = checkout
  dump          = cat-file -p
  fast-amend    = commit --amend -C HEAD
  findnext      = rev-list --reverse -n1 HEAD..master
  filelog       = log -u
  go            = checkout -b
  hardreset     = reset --hard HEAD
  hist          = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
  last          = cat-file commit HEAD
  lastd         = diff HEAD^
  ld            = log --topo-order --stat --patch --full-diff --pretty=format:'%C(bold)%C(yellow)Commit:%C(reset) %C(yellow)%H%C(red)%d%n%C(bold)%C(yellow)Author:%C(reset) %C(cyan)%an <%= "<%ae>" %>%n%C(bold)%C(yellow)Date:%C(reset)   %C(blue)%ai (%ar)%C(reset)%n%+B'
  lg            = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd)%Creset' --abbrev-commit --date=short
  lga           = log --topo-order --all --graph --pretty=format:'%C(yellow)%h %C(cyan)%cn%C(reset) %s %C(red)%d%C(reset)%n'
  lgs           = log --topo-order --all --graph --pretty=format:'%C(yellow)%h%C(reset) %s %C(red)%d%C(reset)%n'
  ll            = log --pretty=oneline --abbrev-commit --max-count=15
  llf           = fsck --lost-found
  lm            = log --topo-order --pretty=format:'%s'
  longline      = log --abbrev-commit --graph --pretty=format:'%C(yellow bold)%h%Creset by %C(red)%an%Creset (%ar)%C(cyan bold)%d%Creset%n%s%n%b' --all
  ls            = log --topo-order --stat --pretty=format:'%C(bold)%C(yellow)Commit:%C(reset) %C(yellow)%H%C(red)%d%n%C(bold)%C(yellow)Author:%C(reset) %C(cyan)%an <%= "%ae" %>%n%C(bold)%C(yellow)Date:%C(reset)   %C(blue)%ai (%ar)%C(reset)%n%+B'
  lt            = log --topo-order --pretty=format:'%C(yellow)%h %C(cyan)%cn %C(blue)%cr%C(reset) %s'
  patchadd      = add --patch
  rclone        = clone --reference /git/cache.git/
  remotes       = remote -v
  review        = merge --no-ff --no-commit
  sa            = status -sb --ignore-submodules=untracked
  sm            = status -sb -uno --ignore-submodules=untracked
  short         = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
  shortnocolor  = log --pretty=format:\"%h %cr %cn %s\"
  standup       = shortlog --since=yesterday
  stc           = diff --stat --name-status --cached
  subdo         = submodule foreach git
  tags          = tag -l
  today         = shortlog --since=midnight
  type          = cat-file -t
  unstage       = reset HEAD
  uncommit      = reset --soft HEAD^
  unref         = reset --soft HEAD@{1}
  vgc           = repack -f -a -d --depth=250 --window=250
  who           = shortlog -s -n --no-merges

  # More complex functionality
  add-unmerged      = !git add $(git ls-files --unmerged | cut -f2 | sort -u)
  checkoutnext      = !git checkout $(git findnext)
  credit            = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
  datetag           = !git tag $(date '+%Y%m%d%H%M')-1
  debug             = !GIT_PAGER= gdb --args git
  edit-last-commit  = !$EDITOR $(git diff-tree -r --name-only 'HEAD' 'HEAD~1')
  edit-unmerged     = !$EDITOR $(git ls-files --unmerged | cut -f2 | sort -u)
  file-blame        = !git ls-files | xargs -n1 -I{} git log -1 --pretty=format:'%ci {}' -- {}
  push-head         = !git push origin $(git symbolic-ref HEAD)
  pushall           = !git remote | xargs -n1 git push
  pushalltags       = !git remote | xargs -n1 git push --tags
  subup             = !git submodule foreach git checkout master && git submodule foreach git pull
  top               = !eval cd "$(pwd)/$(git rev-parse --show-cdup)" && pwd

  # Not sure I'm going to use these.
# # Show the diff between the latest commit and the current state
# d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"
# # `git di $number` shows the diff between the state `$number` revisions ago and the current state
# di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
# # Pull in remote changes for the current repository and all its submodules
# p = !"git pull; git submodule foreach git pull origin master"
# # Clone a repository including all submodules
# c = clone --recursive
# # Commit all changes
# ca = !git add -A && git commit -av
# # Show verbose output about tags, branches or remotes
# # Interactive rebase with the given number of latest commits
# reb = "!r() { git rebase -i HEAD~$1; }; r"
# # Undo a `git push`
# undopush = push -f origin HEAD^:master

  # Aliases to allow for the completion of helper functions
  amend            = !git-amend
  browse           = !hub browse
  compare          = !hub compare
  conflicts        = !git-conflicts
  cut-branch       = !git-cut-branch
  sh               = !git-sh
  grab             = !git-grab
  thanks           = !git-thanks
  track            = !git-track
  remove-submodule = !git-remove-submodule
  incoming         = !git-incoming
  outgoing         = !git-outgoing

[advice]
  statusHints = false

[color]
  pager = true
  ui = auto

[color "diff"]
  meta = blue bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "branch"]
  current = yellow reverse
  local = yellow bold
  remote = green bold
  plain = red bold

[color "status"]
  added = yellow
  changed = green bold
  untracked = blue bold


[diff]
  mnemonicprefix = true
  renames = copies

[pack]
  threads = 0

[gc]
  reflogexpire = 300
  reflogexpireunreachable = 90

[github]
  user = <%= user_id["github_user"] %>

[push]
  default = simple

# URL shorthands
[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
  insteadOf = "github:"
[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
  insteadOf = "gist:"

<%= include_file "platform/gitconfig.{PLATFORM}" %>

# vim: ft=gitconfig
