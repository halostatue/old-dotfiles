#! zsh

##
# Plug-in based ssh-agent support for zsh.
#
# To enable agent forwarding support, add the following to your environment
# configuration:
#
#   zstyle :hzsh:plugins:ssh-agent agent-forwarding on
#
# To load multiple identities, use the identities style:
#
#   zstyle :hzsh:plugins:ssh-agent identities id_rsa id_rsa2 id_github
#
# To load all identities in ${HOME}/.ssh, use the all-identities style:
#
#   zstyle :hzsh:plugins:ssh-agent all-identities yes
#
# The all-identities functionality is considered over the normal identities
# functionality, and looks for any files with a ".pub" extension in
# ${HOME}/.ssh.
#
# CREDITS
# -------
# Based on code from Joseph M. Reagle
# http://www.cygwin.com/ml/cygwin/2001-06/msg00537.html
#
# Agent forwarding support based on ideas from Florent Thoumie and Jonas
# Pfenniger.
#
# I had a version of Joseph M. Reagle's code previously in zsh/rc.d/51-ssh and
# have removed it in favour of this version from oh-my-zsh.

local __saplugin__ssh_env="${HOME}/.ssh/environment-${HOST}"
local __saplugin__forwarding

function __saplugin__start_agent()
{
  # Start ssh-agent and set up the environment
  builtin print "Initializing SSH agent..."
  /usr/bin/env ssh-agent | sed 's/^echo/#echo/' > "${__saplugin__ssh_env}"
  chmod 600 "${__saplugin__ssh_env}"
  builtin source "${__saplugin__ssh_env}" > /dev/null

  local all_identities
  local -a identities
  zstyle -b :hzsh:plugins:ssh-agent all-identities all_identities
  if [ "${all_identities}" = "yes" ]; then
    identities=("${HOME}/.ssh/"*.pub(:t:r))
  else
    zstyle -a :hzsh:plugins:ssh-agent identities identities
  fi

  /usr/bin/env ssh-add "${HOME}/.ssh/"${^identities}
  builtin printf "successful.\n"
}

zstyle -b :hzsh:plugins:ssh-agent agent-forwarding __saplugin__forwarding
if [ ${__saplugin__forwarding} = "yes" -a -n "${SSH_AUTH_SOCK}" ]; then
  # Add a nifty symlink for screen/tmux if agent forwarding
  [ -L ${SSH_AUTH_SOCK} ] ||
    ln -sf "${SSH_AUTH_SOCK}" /tmp/ssh-agent-${USER}-screen
elif [ -f "${__plugin_ssh_env}" ]; then
  builtin source "${__saplugin__sshenv}" > /dev/null
  ps -ef | grep "${SSH_AGENT_PID}" | grep ssh-agent$ > /dev/null || {
    __saplugin__start_agent
  }
else
  __saplugin__start_agent
fi

# Clean up after ourselves now that ssh-agent is started.
unfunction __saplugin__start_agent
unset __saplugin__forwarding
unset __saplugin__ssh_env
