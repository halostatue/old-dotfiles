#autoload -U

local bn=$(basename ${0})

function __hszsh-git-identity-error()
{
  echo "${bn}: error: ${*}" >&2
}

function __hszsh-git-identity-usage()
{
  cat >&2 <<EOS

Usage: ${bn} add|set IDENTITY-NAME "NAME" "email"
       ${bn} remove IDENTITY-NAME
       ${bn} use IDENTITY-NAME
       ${bn} show IDENTITY-NAME
       ${bn} list IDENTITY-NAME

Manages or uses git user identities.
EOS
}

function __hszsh-git-identity-exists()
{
  if [ ! -f ${__hszsh_git_plugin_identity_path}/${1} ]; then
    __hszsh-git-identity-error "git-identity \"${1}\" does not exist."
    return 127
  fi

  return 0
}

function __hszsh-git-identity-remove()
{
  __hszsh-git-identity-exists ${1} || return

  echo "Removing git-identity \"${1}\"."
  rm -f ${__hszsh_git_plugin_identity_path}/${1}
}

function __hszsh-git-identity-use()
{
  __hszsh-git-identity-exists ${1} || return

  echo "Using git-identity \"${1}\"."
  source ${__hszsh_git_plugin_identity_path}/${1}
}

function __hszsh-git-identity-show()
{
  __hszsh-git-identity-exists ${1} || return

  echo "git-identity \"${1}\":"
  cat ${__hszsh_git_plugin_identity_path}/${1}
}

function __hszsh-git-identity-add()
{
  cat > ${__hszsh_git_plugin_identity_path}/${1} <<EOS
export GIT_AUTHOR_NAME="${2}"
export GIT_AUTHOR_EMAIL="${3}"

export GIT_COMMITTER_NAME="${2}"
export GIT_COMMITTER_EMAIL="${3}"
EOS
}

function __hszsh-git-identity-list()
{
  if [ ${#identities} -eq 0 ]; then
    echo "No identities defined."
  else
    local name
    local -a printable
    for name (${identities}); do
      printable+=(${name:t})
    done

    echo ${printable}
  fi
}

if [ -z "${__hszsh_git_plugin_identity_path}" ]; then
  __hszsh-git-identity-error "Missing the identity path."
  __hszsh-git-identity-usage
  return 1
fi

if [ ${#} -eq 0 ]; then
  __hszsh-git-identity-error "No command given."
  __hszsh-git-identity-usage
  return 1
fi

local command_name="${1}"
shift 1

local -a identities
identities=(${__hszsh_git_plugin_identity_path}/*(.N))

local command_match=$(echo "${command_name}" | tr A-Z a-z)
local -i required_params=0

case "${command_match}" in
  add|set)      # git-identity add|set IDENTITY-NAME "NAME" "email"
    required_params=3
    command_match=add
    ;;
  remove|show|use)   # git-identity remove|show|use IDENTITY-NAME
    required_params=1
    ;;
  list)     # git-identity list
    required_params=0
    ;;
  *)
    __hszsh-git-identity-error "Unknown command \"${command_name}\"."
    __hszsh-git-identity-usage
    return 2
    ;;
esac

if [ "${#}" -ne ${required_params} ]; then
  __hszsh-git-identity-error "Invalid parameter count for \"${command_name}\"."
  __hszsh-git-identity-usage
  return 3
fi

__hszsh-git-identity-${command_match} "${@}"
